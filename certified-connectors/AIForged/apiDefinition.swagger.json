{
  "swagger": "2.0",
  "info": {
    "title": "AIForged",
    "description": "AIForged is an Intelligent Document Processing solution to complex problems. AIForged can automate the processing and extraction of structured data from unstructured images. The connector provides integration and automation of intellegent document extraction with AIForged",
    "contact": {
      "name": "AIForged",
      "url": "https://www.aiforged.com",
      "email": "support@aiforged.com"
    },
    "license": {
      "name": "Proprietary license"
    },
    "version": "v1.1"
  },
  "host": "portal.aiforged.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Account/GetCurrentUser": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get the current logged in user",
        "description": "This operation gets info for the current logged in user",
        "operationId": "Account_GetCurrentUser",
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The user",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.UserViewModel"
            }
          }
        }
      }
    },
    "/api/Account/GetAPIKey": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get the API key for a user",
        "description": "This operation gets the API key for a user",
        "operationId": "Account_GetApiKey",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "API key is returned",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Classes/Get": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get classification information",
        "description": "This operation gets the class/category information for a class ID",
        "operationId": "Classes_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "Id",
            "in": "query",
            "description": "The ID of the classification",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The ID of the classification",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The class is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The class or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Classes/GetByProject": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get all categories by project",
        "description": "This operation gets all classes defined in a project",
        "operationId": "Classes_GetByProject",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The class is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Classes/FindByName": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get category by project or name",
        "description": "This operation searches for a class by name in a project",
        "operationId": "Classes_FindByName",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "description": "The class name",
            "x-nullable": true,
            "x-ms-summary": "The class name",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "lookupMethod",
            "in": "query",
            "description": "The name lookup method. Optional",
            "x-schema": {
              "$ref": "#/definitions/LarcAI.DictionaryLookupMethod"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "x-ms-summary": "The name lookup method. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "number",
            "name": "minConfidence",
            "in": "query",
            "description": "The lookup match confidence of the name. Default is 0.8",
            "format": "float",
            "default": 0.8,
            "x-nullable": false,
            "x-ms-summary": "The lookup match confidence of the name. Default is 0.8",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The class is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Classes/GetByUser": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get classes by user and project",
        "description": "This operation gets classes by user and project",
        "operationId": "Classes_GetByUser",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of classes is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/Get": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "Get custom dataset and data",
        "description": "Get custom dataset and data",
        "operationId": "DataSet_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The parameter definition ID of the dataset",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter definition ID of the dataset",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "includeData",
            "in": "query",
            "description": "Should dataset data also be returned",
            "x-nullable": false,
            "x-ms-summary": "Should dataset data also be returned",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "pageNo",
            "in": "query",
            "description": "The page number of the dataset data. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The page number of the dataset data. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "The page size of the data. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The page size of the data. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "sortFieldDefId",
            "in": "query",
            "description": "The definition ID of the field being sorted",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The definition ID of the field being sorted",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "sortDirection",
            "in": "query",
            "description": "Ascending or descending order",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.SortDirection"
            },
            "x-nullable": true,
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "Ascending or descending order",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "searchField",
            "in": "query",
            "description": "The field of the dataset to be searched. Optional",
            "x-nullable": true,
            "x-ms-summary": "The field of the dataset to be searched. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "searchFilter",
            "in": "query",
            "description": "The filter to be applied on the search field",
            "x-nullable": true,
            "x-ms-summary": "The filter to be applied on the search field",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The newly created custom dataset record is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSet"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/GetByName": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "Get dataset by name",
        "description": "Get dataset by name",
        "operationId": "DataSet_GetByName",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "dataSetName",
            "in": "query",
            "description": "The dataset name",
            "x-nullable": true,
            "x-ms-summary": "The dataset name",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "includeData",
            "in": "query",
            "description": "Should dataset data also be returned",
            "x-nullable": false,
            "x-ms-summary": "Should dataset data also be returned",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "pageNo",
            "in": "query",
            "description": "The page number of the dataset entries. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The page number of the dataset entries. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "The page size of the data. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The page size of the data. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "sortFieldDefId",
            "in": "query",
            "description": "The definition ID of the field being sorted",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The definition ID of the field being sorted",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "sortDirection",
            "in": "query",
            "description": "Ascending or descending order",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.SortDirection"
            },
            "x-nullable": true,
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "Ascending or descending order",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "searchField",
            "in": "query",
            "description": "The field of the dataset to be searched. Optional",
            "x-nullable": true,
            "x-ms-summary": "The field of the dataset to be searched. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "searchFilter",
            "in": "query",
            "description": "The filter to be applied on the search field",
            "x-nullable": true,
            "x-ms-summary": "The filter to be applied on the search field",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The newly created custom dataset record is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSet"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/GetById": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "Get custom dataset by ID",
        "description": "This operation gets a custom dataset by ID",
        "operationId": "DataSet_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "dataSetId",
            "in": "query",
            "description": "The dataset ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The dataset ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "includeData",
            "in": "query",
            "description": "Should dataset date be included",
            "x-nullable": false,
            "x-ms-summary": "Should dataset date be included",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "pageNo",
            "in": "query",
            "description": "Dataset data page number. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Dataset data page number. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Dataset data page size. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Dataset data page size. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "sortFieldDefId",
            "in": "query",
            "description": "Field definition of dataset the sort direction will be applied. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Field definition of dataset the sort direction will be applied. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "sortDirection",
            "in": "query",
            "description": "Ascending or descending. Optional",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.SortDirection"
            },
            "x-nullable": true,
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "Ascending or descending. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "searchField",
            "in": "query",
            "description": "The dataset field that should be searched. Optional",
            "x-nullable": true,
            "x-ms-summary": "The dataset field that should be searched. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "searchFilter",
            "in": "query",
            "description": "The search filter on the specified field. Optional",
            "x-nullable": true,
            "x-ms-summary": "The search filter on the specified field. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The custom dataset is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSet"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The dataset, service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/GetAll": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "Get all datasets for a service",
        "description": "This operation gets all custom datasets created in a service",
        "operationId": "DataSet_GetAll",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "Service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Service id",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of custom dataset record is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.CustomDataSet"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/Create": {
      "post": {
        "tags": [
          "DataSet"
        ],
        "summary": "Create a new empty custom dataset",
        "description": "This operation creates a new empty custom dataset",
        "operationId": "DataSet_Create",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "dataSetName",
            "in": "query",
            "description": "The name of the new dataset",
            "x-nullable": true,
            "x-ms-summary": "The name of the new dataset",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The newly created custom dataset is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSet"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/Delete": {
      "delete": {
        "tags": [
          "DataSet"
        ],
        "summary": "Delete a custom dataset",
        "description": "This operation deletes custom dataset data and optionally field definitions",
        "operationId": "DataSet_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "docid",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The definition ID of the custom dataset",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The definition ID of the custom dataset",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "definition",
            "in": "query",
            "description": "Should the dataset fields also be deleted",
            "x-nullable": false,
            "x-ms-summary": "Should the dataset fields also be deleted",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The custom dataset was deleted successfuly",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/GetRecord": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "Get a custom dataset record",
        "description": "Get a custom dataset record",
        "operationId": "DataSet_GetRecord",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The dataset definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The dataset definition ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "keyId",
            "in": "query",
            "description": "The record ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The record ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "includeVerifications",
            "in": "query",
            "description": "Should verifications also be returned",
            "x-nullable": false,
            "x-ms-summary": "Should verifications also be returned",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The custom dataset was deleted successfuly",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/CreateRecord": {
      "post": {
        "tags": [
          "DataSet"
        ],
        "summary": "Create a custom dataset record",
        "description": "This operation creates custom dataset record or row in an existing custom dataset",
        "operationId": "DataSet_CreateRecord",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The custom dataset definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The custom dataset definition ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "record",
            "in": "body",
            "required": true,
            "description": "The record object to add to the custom dataset",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
            },
            "x-nullable": false,
            "x-ms-summary": "The record object to add to the custom dataset",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The newly created custom dataset record is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/UpdateRecord": {
      "put": {
        "tags": [
          "DataSet"
        ],
        "summary": "Update a custom dataset record",
        "description": "Update a custom dataset record",
        "operationId": "DataSet_UpdateRecord",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The definition ID of the dataset",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The definition ID of the dataset",
            "x-ms-visibility": "important"
          },
          {
            "name": "record",
            "in": "body",
            "required": true,
            "description": "The data used to update the record",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
            },
            "x-nullable": false,
            "x-ms-summary": "The data used to update the record",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The custom dataset was deleted successfuly",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/DeleteRecord": {
      "delete": {
        "tags": [
          "DataSet"
        ],
        "summary": "Delete a custom dataset record by key id",
        "description": "Delete a custom dataset record by key id",
        "operationId": "DataSet_DeleteRecord",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The parameter definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter definition ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "keyId",
            "in": "query",
            "description": "The record ID to delete",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The record ID to delete",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The newly created custom dataset record is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/DeleteRecords": {
      "delete": {
        "tags": [
          "DataSet"
        ],
        "summary": "Delete multiple custom dataset records by key ids",
        "description": "Delete multiple custom dataset records by key ids",
        "operationId": "DataSet_DeleteRecords",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "defId",
            "in": "query",
            "description": "The dataset definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The dataset definition ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "keyIds",
            "in": "body",
            "required": true,
            "description": "The record ID to delete",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": false,
            "x-ms-summary": "The record ID to delete",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The custom dataset was deleted successfuly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DataSet/Save": {
      "post": {
        "tags": [
          "DataSet"
        ],
        "summary": "Save a custom dataset",
        "description": "Save a custom dataset",
        "operationId": "DataSet_Save",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "type": "boolean",
            "name": "mergeData",
            "in": "query",
            "description": "Should dataset data be merged",
            "x-nullable": false,
            "x-ms-summary": "Should dataset data be merged",
            "x-ms-visibility": "important"
          },
          {
            "name": "dataset",
            "in": "body",
            "required": true,
            "description": "The dataset to save",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.CustomDataSet"
            },
            "x-nullable": false,
            "x-ms-summary": "The dataset to save",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The custom dataset was saved successfuly",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/Get": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get a document by ID",
        "description": "This operation gets document info for a document ID",
        "operationId": "Document_GetDocument",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The document could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/GetHierarchy": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get a document and its related documents",
        "description": "This operation gets the document hierarchy for a document",
        "operationId": "Document_GetHierarchy",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The document could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/Delete": {
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete a document by ID",
        "description": "This operation marks a document for deletion",
        "operationId": "Document_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The ID of the document to delete",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The ID of the document to delete",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document was deleted",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The document could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/UnDelete": {
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Undelete a document by id",
        "description": "This operation removes the deleted state from a document",
        "operationId": "Document_UnDelete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The ID of the document to undelete",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The ID of the document to undelete",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "newstatus",
            "in": "query",
            "description": "The new status after undelete",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
            },
            "x-nullable": false,
            "enum": [
              0,
              3,
              4,
              5,
              8,
              9,
              10,
              11,
              12,
              13,
              81,
              90,
              98,
              99,
              103,
              108,
              109,
              110,
              120,
              121,
              122,
              190
            ],
            "x-ms-summary": "The new status after undelete",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "usagefilter",
            "in": "query",
            "description": "Only update documents for a specific usage",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.UsageType"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              10,
              90,
              98,
              99
            ],
            "x-ms-summary": "Only update documents for a specific usage",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query",
            "description": "Recursively undelete",
            "x-nullable": false,
            "x-ms-summary": "Recursively undelete",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document was undeleted",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/GetPreviews": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get preview documents and images for a service",
        "description": "This operation gets the preview images of documents in a service",
        "operationId": "Document_GetPreviews",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID of the owner of the service",
            "x-nullable": true,
            "x-ms-summary": "The user ID of the owner of the service",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The service ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of document is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project or doc could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/GetImages": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get document images",
        "description": "This operation gets the document page images",
        "operationId": "Document_GetImages",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "Service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Service id",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of document images is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentDataViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project, service or doc could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/GetBlobById": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get blob by blob key",
        "description": "This operation gets the blob storage associated with the ID",
        "operationId": "Document_GetBlobById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The blob ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The blob ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "The blob is returned"
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc, project, service or blob could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/DeleteBlob": {
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete a document blob",
        "description": "This operation deletes a document blob",
        "operationId": "Document_DeleteBlob",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The blob ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The blob ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "The blob was deleted"
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc, project, service or blob could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/UploadFile": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload a document",
        "description": "This operation uploads a document to the AIForged server",
        "operationId": "Document_UploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "classId",
            "in": "query",
            "description": "The cass ID",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The cass ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "status",
            "in": "query",
            "description": "The status of document to upload",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
            },
            "x-nullable": false,
            "enum": [
              0,
              3,
              4,
              5,
              8,
              9,
              10,
              11,
              12,
              13,
              81,
              90,
              98,
              99,
              103,
              108,
              109,
              110,
              120,
              121,
              122,
              190
            ],
            "x-ms-summary": "The status of document to upload",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "usage",
            "in": "query",
            "description": "The usage of the document to upload",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.UsageType"
            },
            "x-nullable": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              10,
              90,
              98,
              99
            ],
            "x-ms-summary": "The usage of the document to upload",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "masterid",
            "in": "query",
            "description": "The parent document ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The parent document ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "comment",
            "in": "query",
            "description": "Comments to be added to the document",
            "x-nullable": true,
            "x-ms-summary": "Comments to be added to the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "externalId",
            "in": "query",
            "description": "The external ID of the document",
            "x-nullable": true,
            "x-ms-summary": "The external ID of the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "result",
            "in": "query",
            "description": "Result data to be added to the document",
            "x-nullable": true,
            "x-ms-summary": "Result data to be added to the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "resultId",
            "in": "query",
            "description": "The result ID",
            "x-nullable": true,
            "x-ms-summary": "The result ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "resultIndex",
            "in": "query",
            "description": "The result index",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The result index",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "guid",
            "in": "query",
            "description": "A guid ID",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "A guid ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "description": "File data",
            "x-nullable": true,
            "x-ms-summary": "File data",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of files uploaded is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/Classify": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload and classify a document",
        "description": "This operation uploads and classifies a document",
        "operationId": "Document_Classify",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "masterId",
            "in": "query",
            "description": "The parent document ID",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The parent document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "comment",
            "in": "query",
            "description": "Comment to add to the document",
            "x-nullable": true,
            "x-ms-summary": "Comment to add to the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "externalId",
            "in": "query",
            "description": "Related or external document ID",
            "x-nullable": true,
            "x-ms-summary": "Related or external document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "result",
            "in": "query",
            "description": "Result data to add to the document",
            "x-nullable": true,
            "x-ms-summary": "Result data to add to the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "resultId",
            "in": "query",
            "description": "The result ID",
            "x-nullable": true,
            "x-ms-summary": "The result ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "resultIndex",
            "in": "query",
            "description": "The result index. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The result index. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "guid",
            "in": "query",
            "description": "A Guid ID",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "A Guid ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "description": "The file data",
            "x-nullable": true,
            "x-ms-summary": "The file data",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The classified document is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/ExtractAndVerify": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload and extract information for verification",
        "description": "This operation uploads a document and extracts",
        "operationId": "Document_ExtractAndVerify",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "masterId",
            "in": "query",
            "description": "The parent document ID",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The parent document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "comment",
            "in": "query",
            "description": "Comments to add to the document",
            "x-nullable": true,
            "x-ms-summary": "Comments to add to the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "externalId",
            "in": "query",
            "description": "Related or external document ID",
            "x-nullable": true,
            "x-ms-summary": "Related or external document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "result",
            "in": "query",
            "description": "Result data to add to the document",
            "x-nullable": true,
            "x-ms-summary": "Result data to add to the document",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "resultId",
            "in": "query",
            "description": "The result ID",
            "x-nullable": true,
            "x-ms-summary": "The result ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "resultIndex",
            "in": "query",
            "description": "The result index. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The result index. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "guid",
            "in": "query",
            "description": "A Guid ID",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "A Guid ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "description": "The file data",
            "x-nullable": true,
            "x-ms-summary": "The file data",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The extracted document with parameters is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Document/GetClassification": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get a document classification",
        "description": "This operation gets the document classification/category",
        "operationId": "Document_GetClassification",
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document class is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc, project or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ParamDef/Get": {
      "get": {
        "tags": [
          "ParamDef"
        ],
        "summary": "Get definition by ID",
        "description": "This operation gets the parameter definition associated with the ID",
        "operationId": "ParamDef_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The parameter definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter definition ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The parameter definition is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "401": {
            "x-nullable": false,
            "description": "The user is not authorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The parameter definition or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ParamDef/GetParentService": {
      "get": {
        "tags": [
          "ParamDef"
        ],
        "summary": "Get parent service for a parameter def by Id",
        "description": "This operation gets the parent service of a parameter definition",
        "operationId": "ParamDef_GetParentService",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The parameter definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter definition ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The parameter definition service is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The parameter definition or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ParamDef/GetHierachy": {
      "get": {
        "tags": [
          "ParamDef"
        ],
        "summary": "Get hierarchy of fields for a service",
        "description": "This operation gets the hierarchy of fields defined in a service",
        "operationId": "ParamDef_GetHierachy",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "includeCount",
            "in": "query",
            "description": "Include count stats. Optional",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include count stats. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "includeSettings",
            "in": "query",
            "description": "Include settings. Optional",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include settings. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "includeChildren",
            "in": "query",
            "description": "Include child definiitions. Optional",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include child definiitions. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The parameter definition hierarchy is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/Get": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get parameter value",
        "description": "This operation gets the value of a parameter in a document",
        "operationId": "Parameters_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "category",
            "in": "query",
            "description": "The parameter category. Optional",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              20,
              21,
              22,
              40
            ],
            "x-ms-summary": "The parameter category. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "grouping",
            "in": "query",
            "description": "The parameter grouping type. Optional",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.GroupingType"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              99
            ],
            "x-ms-summary": "The parameter grouping type. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "includeverification",
            "in": "query",
            "description": "Include verification data. Optional",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include verification data. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of parameters is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/GetUsage": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get parameter definition usage",
        "description": "This operation gets all parameters associated with the parameter definition",
        "operationId": "Parameters_GetUsage",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "pdId",
            "in": "query",
            "description": "The parameter definition ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter definition ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "docIds",
            "in": "body",
            "required": true,
            "description": "The list of document IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": false,
            "x-ms-summary": "The list of document IDs",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of parameters is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/GetHierarchy": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get document parameter hierarchy",
        "description": "This operation gets the list of parameters in a document",
        "operationId": "Parameters_GetHierarchy",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "includeverification",
            "in": "query",
            "description": "Indicates whether verification items must be included. Optional",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Indicates whether verification items must be included. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "The page index of the parameters. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The page index of the parameters. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of parameters is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc, project or service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/Delete": {
      "delete": {
        "tags": [
          "Parameters"
        ],
        "summary": "Delete a parameter",
        "description": "This operation deletes a parameter",
        "operationId": "Parameters_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "paramid",
            "in": "query",
            "description": "The parameter ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The deleted document is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or doc parameter could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/GetByVerification": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get parameter by verification id",
        "description": "This operation gets a parameter associated with a verification item",
        "operationId": "Parameters_GetByVerification",
        "parameters": [
          {
            "type": "integer",
            "name": "verificationId",
            "in": "query",
            "description": "The verification ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The verification ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document parameter is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The verification, parameter or doc could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/GetSummary": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get summary of project verifications",
        "description": "This operation gets a summary of verifications for a project",
        "operationId": "Parameters_GetSummary",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of doc summaries is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocParamSummary"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Parameters/Extract": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Extract document parameters",
        "description": "This operation extracts all the parameters in a document",
        "operationId": "Parameters_Extract",
        "parameters": [
          {
            "type": "integer",
            "name": "docid",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of extracted parameters is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentExtraction"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Project/GetByUser": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects and services for user",
        "description": "This operation gets a list of all projects and services linked to a user",
        "operationId": "Project_GetByUser",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of projects is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "401": {
            "x-nullable": false,
            "description": "The user is not authorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Project/GetUserProject": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a specific project for user",
        "description": "This operation gets a specific project linked to a user",
        "operationId": "Project_GetUserProject",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The project is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Project/GetHierachies": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get hierarchy of fields for all services in a project",
        "description": "This operation get the hierarchy of all the created fields of all services in a project",
        "operationId": "Project_GetHierachies",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The service ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "groupId",
            "in": "query",
            "description": "The group ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The group ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "includeCount",
            "in": "query",
            "description": "Include counter stats. Optional",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include counter stats. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "onlyServices",
            "in": "query",
            "description": "Only include services. Optional",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Only include services. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "includeSettings",
            "in": "query",
            "description": "Include settings. Optional",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include settings. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "boolean",
            "name": "includeChildren",
            "in": "query",
            "description": "Include children. Optional",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include children. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of fields is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "401": {
            "x-nullable": false,
            "description": "The user is not authorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Project/GetByName": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Find a project by name for user",
        "description": "This operation finds a project by name for a user",
        "operationId": "Project_GetByName",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "description": "Project name",
            "x-nullable": true,
            "x-ms-summary": "Project name",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The project is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Project/GetServices": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get services related to a project",
        "description": "This operation gets all services linked to a project for a user",
        "operationId": "Project_GetServices",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stlfilter",
            "in": "query",
            "description": "Service type filter. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Service type filter. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "enginefilter",
            "in": "query",
            "description": "Filter by engine. Optional",
            "x-nullable": true,
            "x-ms-summary": "Filter by engine. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The liat of services is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Project/GetBalance": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get the balance for a specific project",
        "description": "Get the balance for a specific project",
        "operationId": "Project_GetBalance",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user ID",
            "x-nullable": true,
            "x-ms-summary": "The user ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The service ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "effectiveDate",
            "in": "query",
            "description": "The effective date of the balance. Optional",
            "format": "date-time",
            "x-nullable": true,
            "x-ms-summary": "The effective date of the balance. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "The custom dataset was deleted successfuly",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Services/Get": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get a service by id",
        "description": "This operation gets a service by ID",
        "operationId": "Services_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The service is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The service could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Services/GetCodeConstants": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get code constants",
        "description": "This operation gets all the code constants for fields in a service",
        "operationId": "Services_GetCodeConstants",
        "parameters": [
          {
            "type": "integer",
            "name": "serviceId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The dictionary of code constants is returned",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/System/GetSystemDate": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get the current server date and time",
        "description": "This operation gets the AIForged server date and time",
        "operationId": "System_GetSystemDate",
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The system date and time is returned",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "/api/System/GetSystemInfo": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get system and application information",
        "description": "This operation gets system and application information",
        "operationId": "System_GetSystemInfo",
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The system info is returned",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/System/GetDataTypes": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get data types",
        "description": "This operation gets info on data types used by AIForged",
        "operationId": "System_GetDataTypes",
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of data types is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DataTypeViewModel"
              }
            }
          }
        }
      }
    },
    "/api/System/GetEnumData": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get system enum values",
        "description": "This operation gets a list of enums defined in AIForged",
        "operationId": "System_GetEnumData",
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of enum data is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.EnumDataViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Verification/Get": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get a verification by ID",
        "description": "This operation gets a verification item by ID",
        "operationId": "Verification_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "verificationId",
            "in": "query",
            "description": "The Verification ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The Verification ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The verification is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The verification, doc, parameter or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Verification/GetAll": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get all verifications for a parameter",
        "description": "This operation gets all the verification items associated with a parameter",
        "operationId": "Verification_GetAll",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "parameterId",
            "in": "query",
            "description": "The parameter ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of verifications is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Verification/GetLatest": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get latest verification for a parameter",
        "description": "This operation gets the latest verification for a parameter in a document",
        "operationId": "Verification_GetLatest",
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "parameterId",
            "in": "query",
            "description": "The parameter ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The parameter ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "pdId",
            "in": "query",
            "description": "The definition ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The definition ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The verification is returned",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Verification/GetShred": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get a verification image shred",
        "description": "This operation gets the image shred of a verification item",
        "operationId": "Verification_GetShred",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "User for the shred",
            "x-nullable": true,
            "x-ms-summary": "User for the shred",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "parId",
            "in": "query",
            "description": "The parameter ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "verificationId",
            "in": "query",
            "description": "The verification ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The verification ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "inline",
            "in": "query",
            "description": "Should the image be inline. Optional",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Should the image be inline. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "The shred image is returned"
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The doc data, parameter, service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Verification/GetSummary": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get a summary of verifications for service",
        "description": "This operation gets a summary of the verification items of a service",
        "operationId": "Verification_GetSummary",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The project id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id",
            "x-ms-visibility": "important"
          },
          {
            "type": "integer",
            "name": "pdId",
            "in": "query",
            "description": "The definition id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The definition id",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "latestOnly",
            "in": "query",
            "description": "Only the latest",
            "default": true,
            "x-nullable": true,
            "x-ms-summary": "Only the latest",
            "x-ms-visibility": "important"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of verification info is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.VerificationSummary"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/Verification/GetHeatmap": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get verification analytics for service",
        "description": "This operation get a heatmap of verifications for a service",
        "operationId": "Verification_GetHeatmap",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project ID. Optional",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The project ID. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service ID",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service ID",
            "x-ms-visibility": "important"
          },
          {
            "type": "boolean",
            "name": "latestOnly",
            "in": "query",
            "description": "Only the latest. Optional",
            "default": true,
            "x-nullable": true,
            "x-ms-summary": "Only the latest. Optional",
            "x-ms-visibility": "advanced"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of verification info is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.VerificationSummary"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "An error occurred or malformed request",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "The user does not have permission",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "The service or project could not be found",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AIForged.ViewModels.UserViewModel": {
      "type": "object",
      "description": "User information",
      "required": [
        "userName",
        "email",
        "isEnabled",
        "isLockedOut",
        "createdDate",
        "updatedDate",
        "projectCount",
        "groupCount",
        "linkedProjectCount",
        "linkedGroupCount",
        "linkedServiceCount"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "userName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 2
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 200,
          "minLength": 0
        },
        "jobTitle": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "format": "phone"
        },
        "configuration": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isLockedOut": {
          "type": "boolean"
        },
        "friendlyName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectCount": {
          "type": "integer",
          "format": "int32"
        },
        "groupCount": {
          "type": "integer",
          "format": "int32"
        },
        "linkedProjectCount": {
          "type": "integer",
          "format": "int32"
        },
        "linkedGroupCount": {
          "type": "integer",
          "format": "int32"
        },
        "linkedServiceCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Microsoft.AspNetCore.Mvc.ProblemDetails": {
      "type": "object",
      "additionalProperties": {},
      "required": [
        "extensions"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "extensions": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "AIForged.DAL.LinkType": {
      "type": "integer",
      "description": "Type of link prokect user access",
      "x-enumNames": [
        "None",
        "Owner",
        "Shared",
        "Marketplace",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        99
      ]
    },
    "AIForged.ViewModels.ProjectViewModel": {
      "type": "object",
      "description": "Projects is a container for billing and services",
      "required": [
        "id",
        "status",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ProjectStatus"
        },
        "name": {
          "type": "string",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "maxLength": 450
        },
        "comment": {
          "type": "string",
          "maxLength": 450
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "balance": {
          "description": "Accounting info for projects and services",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.AccountBalanceItem"
            }
          ]
        },
        "totalDocsCount": {
          "type": "integer",
          "format": "int32"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
          }
        }
      }
    },
    "AIForged.DAL.ProjectStatus": {
      "type": "integer",
      "description": "Used to indicate the status of a project",
      "x-enumNames": [
        "None",
        "Active",
        "Disabled",
        "Billing",
        "Deleted",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        90,
        99
      ]
    },
    "AIForged.ViewModels.AccountBalanceItem": {
      "type": "object",
      "description": "Accounting info for projects and services",
      "required": [
        "id",
        "seq"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "guid"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "bundleId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "info": {
          "type": "string"
        },
        "drCount": {
          "type": "number",
          "format": "double"
        },
        "crCount": {
          "type": "number",
          "format": "double"
        },
        "drQty": {
          "type": "number",
          "format": "double"
        },
        "crQty": {
          "type": "number",
          "format": "double"
        },
        "crQry": {
          "type": "number",
          "format": "double"
        },
        "dr": {
          "type": "number",
          "format": "double"
        },
        "cr": {
          "type": "number",
          "format": "double"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "project": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "bundle": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "txIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "AIForged.ViewModels.ParameterDefViewModel": {
      "type": "object",
      "description": "Service, settings abd rules definitions",
      "required": [
        "id",
        "projectId",
        "serviceTypeId",
        "status",
        "valueType",
        "required",
        "userCount",
        "parameterCount",
        "documentCount"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionStatus"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
        },
        "grouping": {
          "$ref": "#/definitions/AIForged.DAL.GroupingType"
        },
        "valueType": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "valueTypeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "required": {
          "$ref": "#/definitions/AIForged.DAL.RequiredOption"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "info": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "rating": {
          "type": "number",
          "format": "float"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
          }
        },
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.DAL.Models.ParameterDefSettingViewModel"
          }
        },
        "totalCharge": {
          "type": "number",
          "format": "double"
        },
        "userCount": {
          "type": "integer",
          "format": "int32"
        },
        "parameterCount": {
          "type": "integer",
          "format": "int32"
        },
        "documentCount": {
          "type": "integer",
          "format": "int32"
        },
        "validation": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.ParameterDefinitionStatus": {
      "type": "integer",
      "description": "Status of definition",
      "x-enumNames": [
        "Default",
        "Deleted"
      ],
      "enum": [
        0,
        99
      ]
    },
    "AIForged.DAL.ParameterDefinitionCategory": {
      "type": "integer",
      "description": "Category of definition",
      "x-enumNames": [
        "None",
        "Setting",
        "Service",
        "Statistics",
        "Results",
        "Dependency",
        "Verification",
        "DataSet",
        "PreProcessor",
        "Processor",
        "PostProcessor",
        "Extraction"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        20,
        21,
        22,
        40
      ]
    },
    "AIForged.DAL.GroupingType": {
      "type": "integer",
      "description": "Type of field grouping",
      "x-enumNames": [
        "None",
        "Page",
        "Cluster",
        "Table",
        "Row",
        "Column",
        "Paragraph",
        "Line",
        "Word",
        "Array",
        "Form",
        "Field",
        "Anchor",
        "Unknown"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        99
      ]
    },
    "AIForged.DAL.ValueType": {
      "type": "integer",
      "description": "The type of values used for rules and settings",
      "x-enumNames": [
        "None",
        "String",
        "Number",
        "Currency",
        "Boolean",
        "DateTime",
        "TimeSpan",
        "Email",
        "Enum",
        "Picture",
        "Password",
        "SecureString",
        "Address",
        "IDNo",
        "Country",
        "Code",
        "TelephoneNo",
        "GPS",
        "ServiceType",
        "Service",
        "Data",
        "DataSet",
        "System",
        "Unknown"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        90,
        91,
        98,
        99
      ]
    },
    "AIForged.DAL.RequiredOption": {
      "type": "integer",
      "description": "Indicate the if an option is required",
      "x-enumFlags": true,
      "x-enumNames": [
        "Required",
        "Optional",
        "UseDefault",
        "UseBestFit",
        "Hidden",
        "Utility",
        "VerificationService",
        "Trained",
        "Conditional",
        "DataSet"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512
      ]
    },
    "AIForged.DAL.Availability": {
      "type": "integer",
      "description": "Avalability of a record",
      "x-enumNames": [
        "None",
        "Private",
        "Public",
        "Marketplace",
        "Inherit",
        "Internal",
        "Training",
        "DataSet",
        "Hidden",
        "Readonly",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        99
      ]
    },
    "AIForged.DAL.Models.ParameterDefSettingViewModel": {
      "type": "object",
      "description": "Detailed settings for rules and settings",
      "required": [
        "id",
        "parameterDefId",
        "type",
        "status",
        "dtc",
        "dtm",
        "isCaseSensative",
        "invert",
        "oneLine",
        "oneWord",
        "isHandwriting",
        "clearBefore",
        "clearAfter",
        "cleanupValuesBefore",
        "cleanupValuesAfter",
        "validateValuesBefore",
        "validateValuesAfter",
        "abortOnValidationError",
        "isReplacementCaseSensative",
        "maxRetry"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameterDefId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.SettingType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.SettingStatus"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "minValue": {
          "type": "string"
        },
        "maxValue": {
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "minConfidence": {
          "type": "number",
          "format": "float"
        },
        "maxConfidence": {
          "type": "number",
          "format": "float"
        },
        "isCaseSensative": {
          "type": "boolean"
        },
        "invert": {
          "type": "boolean"
        },
        "oneLine": {
          "type": "boolean"
        },
        "oneWord": {
          "type": "boolean"
        },
        "isHandwriting": {
          "type": "boolean"
        },
        "orientation": {
          "$ref": "#/definitions/AIForged.DAL.Orientation"
        },
        "marking": {
          "$ref": "#/definitions/AIForged.DAL.MarkingType"
        },
        "cells": {
          "type": "integer",
          "format": "int32"
        },
        "clearBefore": {
          "$ref": "#/definitions/AIForged.DAL.OptionStatusFlags"
        },
        "clearAfter": {
          "$ref": "#/definitions/AIForged.DAL.OptionStatusFlags"
        },
        "cleanupValuesBefore": {
          "type": "boolean"
        },
        "cleanupValuesAfter": {
          "type": "boolean"
        },
        "validateValuesBefore": {
          "type": "boolean"
        },
        "validateValuesAfter": {
          "type": "boolean"
        },
        "abortOnValidationError": {
          "type": "boolean"
        },
        "isReplacementCaseSensative": {
          "type": "boolean"
        },
        "compileResults": {
          "type": "string"
        },
        "maxRetry": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.SettingType": {
      "type": "integer",
      "description": "The type of setting related to a parameter",
      "x-enumNames": [
        "None",
        "Setting",
        "Rule",
        "Dependency",
        "Template",
        "Runtime"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        9,
        10
      ]
    },
    "AIForged.DAL.SettingStatus": {
      "type": "integer",
      "description": "The status of a setting related to a parameter",
      "x-enumNames": [
        "Active",
        "Disabled",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        99
      ]
    },
    "AIForged.DAL.Orientation": {
      "type": "integer",
      "description": "Text orientation of a field",
      "x-enumNames": [
        "None",
        "Horizontal",
        "Vertical",
        "VerticalReverse"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "AIForged.DAL.MarkingType": {
      "type": "integer",
      "description": "Marking type of text ",
      "x-enumNames": [
        "None",
        "Simple",
        "Undelined",
        "SimpleComb",
        "TextInFrame",
        "CombInFrame",
        "PartitionedFrame",
        "CharBox",
        "GreyBox"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "AIForged.DAL.OptionStatusFlags": {
      "type": "integer",
      "description": "Status flag of options",
      "x-enumFlags": true,
      "x-enumNames": [
        "Required",
        "Suspicious",
        "DefaultUsed",
        "Verified",
        "Bypassed",
        "Error",
        "Done",
        "Success",
        "RangeProblem",
        "IsValid",
        "Warnings"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024
      ]
    },
    "AIForged.ViewModels.DocumentViewModel": {
      "type": "object",
      "description": "Document metadata info",
      "required": [
        "id",
        "projectId",
        "serviceId",
        "status",
        "usage",
        "dtc",
        "dtm",
        "canVerify",
        "canClassify",
        "canTrain",
        "trained"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "usage": {
          "$ref": "#/definitions/AIForged.DAL.UsageType"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "contentType": {
          "type": "string",
          "maxLength": 256
        },
        "filename": {
          "type": "string",
          "maxLength": 450
        },
        "fileType": {
          "type": "string",
          "maxLength": 256
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "documentId": {
          "type": "string",
          "format": "guid"
        },
        "externalId": {
          "type": "string",
          "maxLength": 450
        },
        "masterId": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "string"
        },
        "resultId": {
          "type": "string"
        },
        "resultIndex": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "resultParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentDataViewModel"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
          }
        },
        "info": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latestChildStatus": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "originId": {
          "type": "integer",
          "format": "int32"
        },
        "canVerify": {
          "type": "boolean"
        },
        "canClassify": {
          "type": "boolean"
        },
        "canTrain": {
          "type": "boolean"
        },
        "trained": {
          "type": "boolean"
        },
        "linkedDocsCount": {
          "type": "integer",
          "format": "int32"
        },
        "trainingFieldCount": {
          "type": "integer",
          "format": "int32"
        },
        "trainedParametersCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AIForged.DAL.DocumentStatus": {
      "type": "integer",
      "description": "Indicate the status of a document in the system",
      "x-enumNames": [
        "None",
        "Received",
        "Analyzed",
        "Trained",
        "Processing",
        "Verification",
        "Processed",
        "Queued",
        "Verifying",
        "InterimProcessed",
        "InsufficientBalance",
        "Error",
        "Archive",
        "Deleted",
        "CustomReceived",
        "CustomBusy",
        "CustomVerification",
        "CustomProcessed",
        "CustomVerified",
        "CustomReleased",
        "CustomExport",
        "CustomError"
      ],
      "enum": [
        0,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        81,
        90,
        98,
        99,
        103,
        108,
        109,
        110,
        120,
        121,
        122,
        190
      ]
    },
    "AIForged.DAL.UsageType": {
      "type": "integer",
      "description": "Why do we store this document",
      "x-enumNames": [
        "Definition",
        "Training",
        "Inbox",
        "Outbox",
        "Label",
        "DataSet",
        "System",
        "Sample",
        "Preview"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        10,
        90,
        98,
        99
      ]
    },
    "AIForged.ViewModels.DocumentParameterViewModel": {
      "type": "object",
      "description": "Fields values linked ot extracted from documents",
      "required": [
        "id",
        "documentId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "documentId": {
          "type": "integer",
          "format": "int32"
        },
        "paramDefId": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "sourceId": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "colIndex": {
          "type": "integer",
          "format": "int32"
        },
        "colSpan": {
          "type": "integer",
          "format": "int32"
        },
        "rowIndex": {
          "type": "integer",
          "format": "int32"
        },
        "rowSpan": {
          "type": "integer",
          "format": "int32"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "paramDef": {
          "description": "Service, settings abd rules definitions",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          ]
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
          }
        },
        "verifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
          }
        }
      }
    },
    "AIForged.ViewModels.VerificationViewModel": {
      "type": "object",
      "description": "System and user verification info for fields on documents",
      "required": [
        "id",
        "parameterId",
        "dt",
        "type",
        "status",
        "charge"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameterId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "symbolsConfidence": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "result": {
          "type": "string"
        },
        "box": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "userName": {
          "type": "string"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceDocId": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string"
        },
        "settingId": {
          "type": "integer",
          "format": "int32"
        },
        "workItem": {
          "type": "integer",
          "format": "int32"
        },
        "transactionId": {
          "type": "integer",
          "format": "int32"
        },
        "referenceDocId": {
          "type": "integer",
          "format": "int32"
        },
        "referenceParamId": {
          "type": "integer",
          "format": "int32"
        },
        "referenceDefId": {
          "type": "integer",
          "format": "int32"
        },
        "charge": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AIForged.DAL.VerificationType": {
      "type": "integer",
      "description": "Type of verification",
      "x-enumNames": [
        "None",
        "Provider",
        "System",
        "User",
        "Service",
        "Training",
        "RPA",
        "API",
        "DataSet"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "AIForged.DAL.VerificationStatus": {
      "type": "integer",
      "description": "Verification status flags",
      "x-enumFlags": true,
      "x-enumNames": [
        "Required",
        "Suspicious",
        "DefaultUsed",
        "Verified",
        "Bypassed",
        "Error",
        "Done",
        "Success",
        "RangeProblem",
        "IsValid",
        "Warnings",
        "Service",
        "Training",
        "Scripted",
        "Deleted",
        "Abort"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384,
        32768
      ]
    },
    "AIForged.ViewModels.DocumentDataViewModel": {
      "type": "object",
      "description": "Document blob data",
      "required": [
        "id",
        "documentId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "documentId": {
          "type": "integer",
          "format": "int32"
        },
        "blobId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.DocumentDataType"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "preview": {
          "type": "string",
          "format": "byte"
        },
        "text": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "maxLength": 256
        },
        "resultId": {
          "type": "string",
          "maxLength": 256
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "resolution": {
          "type": "number",
          "format": "double"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        }
      }
    },
    "AIForged.DAL.DocumentDataType": {
      "type": "integer",
      "description": "Indicate the type of data related to a document",
      "x-enumNames": [
        "Image",
        "Result",
        "Page",
        "Backup",
        "Definition",
        "Training"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        10,
        11
      ]
    },
    "AIForged.DAL.WorkItemType": {
      "type": "integer",
      "description": "Type of work item",
      "x-enumNames": [
        "None",
        "Document",
        "Shred",
        "DataSet",
        "Support",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        99
      ]
    },
    "AIForged.DAL.WorkItemAction": {
      "type": "integer",
      "description": "Actount for work item",
      "x-enumNames": [
        "None",
        "Verify",
        "Investigate",
        "Forensic",
        "Fraudulant",
        "Classify",
        "QA",
        "Reprocess"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10
      ]
    },
    "AIForged.DAL.WorkItemStatus": {
      "type": "integer",
      "description": "Work item status",
      "x-enumNames": [
        "None",
        "Created",
        "Completed",
        "EscalateTx",
        "EscalateRx",
        "Transfer",
        "Received",
        "Verified",
        "RelatedVerified",
        "Rejected",
        "Deleted",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        90,
        99
      ]
    },
    "AIForged.DAL.WorkItemMethod": {
      "type": "integer",
      "description": "Work items assignment method",
      "x-enumNames": [
        "Random",
        "HighThroughput",
        "Idle",
        "ProjectOwner",
        "DocumentOwner",
        "User"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.ViewModels.ProjectUserViewModel": {
      "type": "object",
      "description": "Relationship between users, projects, services and groups",
      "required": [
        "id",
        "projectId",
        "role",
        "type",
        "status",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "userFullName": {
          "type": "string"
        },
        "userDisplayName": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "role": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "permission": {
          "type": "string",
          "maxLength": 256
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.LinkType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ProjectUserStatus"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "description": "User information",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.UserViewModel"
            }
          ]
        },
        "project": {
          "description": "Projects is a container for billing and services",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
            }
          ]
        },
        "service": {
          "description": "Service, settings abd rules definitions",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          ]
        },
        "group": {
          "description": "User groups for sharing services and billing",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.UserGroupViewModel"
            }
          ]
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.AccountBalanceItem"
          }
        },
        "related": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ProjectUserViewModel"
          }
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ProjectUserConstraintViewModel"
          }
        }
      }
    },
    "AIForged.DAL.ProjectUserStatus": {
      "type": "integer",
      "description": "Status for project user link",
      "x-enumNames": [
        "None",
        "Requested",
        "Rejected",
        "Approved",
        "Removed",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        99
      ]
    },
    "AIForged.ViewModels.UserGroupViewModel": {
      "type": "object",
      "description": "User groups for sharing services and billing",
      "required": [
        "id",
        "type",
        "status",
        "userId",
        "dtc",
        "dtm",
        "userCount",
        "projectCount",
        "serviceCount"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.UserGroupType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.UserGroupStatus"
        },
        "userId": {
          "type": "string",
          "maxLength": 450,
          "minLength": 1
        },
        "name": {
          "type": "string",
          "maxLength": 256
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "userName": {
          "type": "string"
        },
        "userFullName": {
          "type": "string"
        },
        "userDisplayName": {
          "type": "string"
        },
        "userCount": {
          "type": "integer",
          "format": "int32"
        },
        "projectCount": {
          "type": "integer",
          "format": "int32"
        },
        "serviceCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AIForged.DAL.UserGroupType": {
      "type": "integer",
      "description": "User group type",
      "x-enumNames": [
        "Default",
        "Partner",
        "Reseller",
        "Corporate",
        "Company",
        "Individual"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.DAL.UserGroupStatus": {
      "type": "integer",
      "description": "User group status",
      "x-enumNames": [
        "Active",
        "Deleted"
      ],
      "enum": [
        0,
        99
      ]
    },
    "AIForged.ViewModels.ProjectUserConstraintViewModel": {
      "type": "object",
      "required": [
        "id",
        "projectUserId",
        "type",
        "status",
        "intervalType",
        "fromDate"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "projectUserId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.ConstraintType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ConstraintStatus"
        },
        "intervalType": {
          "$ref": "#/definitions/AIForged.DAL.ConstraintIntervalType"
        },
        "interval": {
          "type": "string",
          "maxLength": 256
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "key": {
          "type": "string",
          "maxLength": 256
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "usage": {
          "type": "number",
          "format": "double"
        },
        "comment": {
          "type": "string",
          "maxLength": 256
        },
        "userId": {
          "type": "string",
          "maxLength": 450
        }
      }
    },
    "AIForged.DAL.ConstraintType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Count",
        "Credit"
      ],
      "enum": [
        1,
        2
      ]
    },
    "AIForged.DAL.ConstraintStatus": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Active",
        "Deleted"
      ],
      "enum": [
        0,
        99
      ]
    },
    "AIForged.DAL.ConstraintIntervalType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "OnceOff",
        "Day",
        "Week",
        "Month",
        "Year",
        "Timespan"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.DAL.Models.TransactionsAuditViewModel": {
      "type": "object",
      "required": [
        "id",
        "projectId",
        "status",
        "dtc",
        "dtm",
        "qty",
        "price",
        "cost",
        "isCredit",
        "isBillingProject"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "documentId": {
          "type": "integer",
          "format": "int32"
        },
        "bundleId": {
          "type": "integer",
          "format": "int32"
        },
        "paymentId": {
          "type": "integer",
          "format": "int32"
        },
        "chargeId": {
          "type": "integer",
          "format": "int32"
        },
        "relatedTxnId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.TransactionStatus"
        },
        "userId": {
          "type": "string",
          "maxLength": 450
        },
        "runId": {
          "type": "string",
          "maxLength": 256
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "charge": {
          "type": "number",
          "format": "double"
        },
        "isCredit": {
          "type": "boolean"
        },
        "creditBalance": {
          "type": "number",
          "format": "double"
        },
        "projectName": {
          "type": "string"
        },
        "isBillingProject": {
          "type": "boolean"
        },
        "serviceName": {
          "type": "string"
        },
        "bundleName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "auditUserName": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.TransactionStatus": {
      "type": "integer",
      "description": "Transaction status",
      "x-enumNames": [
        "Active",
        "Transfered",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        99
      ]
    },
    "AIForged.DAL.Models.ServiceEventViewModel": {
      "type": "object",
      "required": [
        "id",
        "projectId",
        "eventType",
        "status",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "$ref": "#/definitions/AIForged.DAL.ServiceEventType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ServiceEventStatus"
        },
        "description": {
          "type": "string"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "sourceType": {
          "$ref": "#/definitions/AIForged.DAL.ReferenceType"
        },
        "sourceId": {
          "type": "string"
        },
        "resultType": {
          "$ref": "#/definitions/AIForged.DAL.ReferenceType"
        },
        "resultId": {
          "type": "string"
        },
        "resultBody": {
          "type": "string"
        },
        "resultCount": {
          "type": "integer",
          "format": "int32"
        },
        "resultStatusId": {
          "type": "integer",
          "format": "int32"
        },
        "resultClassId": {
          "type": "integer",
          "format": "int32"
        },
        "masterId": {
          "type": "integer",
          "format": "int32"
        },
        "master": {
          "$ref": "#/definitions/AIForged.DAL.Models.ServiceEventViewModel"
        },
        "related": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.DAL.Models.ServiceEventViewModel"
          }
        }
      }
    },
    "AIForged.DAL.ServiceEventType": {
      "type": "integer",
      "description": "Sevice event type",
      "x-enumNames": [
        "None",
        "Classification",
        "Extraction",
        "Verification",
        "Index",
        "Expert",
        "Extractor",
        "Train",
        "Define",
        "Process",
        "Workflow",
        "Rule",
        "Service",
        "Stats",
        "Code"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ]
    },
    "AIForged.DAL.ServiceEventStatus": {
      "type": "integer",
      "description": "Service event status",
      "x-enumNames": [
        "None",
        "Start",
        "End",
        "Cancelled",
        "Terminated",
        "Error",
        "Stats"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "AIForged.DAL.ReferenceType": {
      "type": "integer",
      "description": "Reference type",
      "x-enumNames": [
        "None",
        "Document",
        "Index",
        "Schedule",
        "Expert",
        "Extractor",
        "Definition",
        "Parameter",
        "Verification",
        "Work",
        "Unknown"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        99
      ]
    },
    "AIForged.ViewModels.BundlesViewModel": {
      "type": "object",
      "description": "A bundle for payments and credits",
      "required": [
        "id",
        "type",
        "name",
        "count",
        "price",
        "discount",
        "dtc",
        "dtm",
        "isActive"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.BundleType"
        },
        "name": {
          "type": "string",
          "maxLength": 256,
          "minLength": 2
        },
        "description": {
          "type": "string",
          "maxLength": 450
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "minimum": 1.0
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "discount": {
          "type": "number",
          "format": "float"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "isActive": {
          "type": "boolean"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "AIForged.DAL.BundleType": {
      "type": "integer",
      "description": "Type of a bundle",
      "x-enumNames": [
        "PrePaid",
        "PostPaid",
        "Gift",
        "Signon",
        "Marketplace",
        "Transfer",
        "Expired",
        "Custom"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "AIForged.ViewModels.ClassesViewModel": {
      "type": "object",
      "description": "Categories/Classes for training and classification",
      "required": [
        "id",
        "projectId",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "maxLength": 450
        },
        "comment": {
          "type": "string",
          "maxLength": 450
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.ClassType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.CategoryStatus"
        },
        "related": {
          "type": "integer",
          "format": "int32"
        },
        "reference": {
          "type": "string",
          "maxLength": 450
        },
        "training": {
          "type": "string",
          "maxLength": 450
        }
      }
    },
    "AIForged.DAL.ClassType": {
      "type": "integer",
      "description": "System category type",
      "x-enumNames": [
        "System",
        "Definition",
        "Other"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "AIForged.DAL.CategoryStatus": {
      "type": "integer",
      "description": "Status of category/class",
      "x-enumNames": [
        "Enabled",
        "Disabled",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        99
      ]
    },
    "LarcAI.DictionaryLookupMethod": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Exact",
        "LevenshteinDistance",
        "HammingDistance",
        "RegEx",
        "None"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "AIForged.ViewModels.ContactViewModel": {
      "type": "object",
      "required": [
        "id",
        "status",
        "type",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ContactStatus"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.NotificationType"
        },
        "address": {
          "type": "string",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "maxLength": 256
        },
        "comment": {
          "type": "string",
          "maxLength": 450
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AIForged.DAL.ContactStatus": {
      "type": "integer",
      "description": "Contact status",
      "x-enumNames": [
        "None",
        "Active",
        "Disabled",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        2,
        90
      ]
    },
    "AIForged.DAL.NotificationType": {
      "type": "integer",
      "description": "Notification provider type",
      "x-enumNames": [
        "None",
        "Email",
        "SMS",
        "WhatsApp",
        "Bot",
        "Application"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.ViewModels.CustomDataSet": {
      "type": "object",
      "required": [
        "projectId",
        "serviceId",
        "stpdId",
        "docId",
        "keyDefId",
        "status",
        "includeData",
        "includeVerifications"
      ],
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "stpdId": {
          "type": "integer",
          "format": "int32",
          "x-deprecated": true,
          "x-deprecatedMessage": "Use ServiceId"
        },
        "docId": {
          "type": "integer",
          "format": "int32"
        },
        "keyDefId": {
          "type": "integer",
          "format": "int32"
        },
        "keyDef": {
          "description": "Service, settings abd rules definitions",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          ]
        },
        "document": {
          "description": "Document metadata info",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          ]
        },
        "definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetRecord"
          }
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "info": {
          "type": "string"
        },
        "includeData": {
          "type": "boolean"
        },
        "pageNo": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "sortFieldDefId": {
          "type": "integer",
          "format": "int32"
        },
        "sortDirection": {
          "$ref": "#/definitions/AIForged.DAL.SortDirection"
        },
        "includeVerifications": {
          "type": "boolean"
        },
        "searchField": {
          "type": "string"
        },
        "searchValue": {
          "type": "string"
        }
      }
    },
    "AIForged.ViewModels.CustomDataSetRecord": {
      "type": "object",
      "required": [
        "keyId",
        "keyDefId"
      ],
      "properties": {
        "keyId": {
          "type": "integer",
          "format": "int32"
        },
        "keyDefId": {
          "type": "integer",
          "format": "int32"
        },
        "keyValue": {
          "type": "string"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.CustomDataSetValue"
          }
        }
      }
    },
    "AIForged.ViewModels.CustomDataSetValue": {
      "type": "object",
      "required": [
        "defId",
        "id"
      ],
      "properties": {
        "defId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "verificationId": {
          "type": "integer",
          "format": "int32"
        },
        "verValue": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "provider": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.SortDirection": {
      "type": "integer",
      "description": "Direction of sort",
      "x-enumNames": [
        "Ascending",
        "Descending"
      ],
      "enum": [
        0,
        1
      ]
    },
    "AIForged.DAL.SortField": {
      "type": "integer",
      "description": "Field to user for Sorting",
      "x-enumNames": [
        "Id",
        "Name",
        "Description",
        "Date",
        "Status",
        "Category"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.DAL.LogType": {
      "type": "integer",
      "description": "Type of logging detail",
      "x-enumNames": [
        "Info",
        "Debug",
        "Warning",
        "Error",
        "Exception",
        "Critical"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.DAL.RatingType": {
      "type": "integer",
      "description": "Rating type",
      "x-enumNames": [
        "User",
        "Agerage",
        "Error"
      ],
      "enum": [
        0,
        1,
        99
      ]
    },
    "AIForged.DAL.RatingStatus": {
      "type": "integer",
      "description": "Rating status",
      "x-enumNames": [
        "Enabled",
        "Disabled",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        99
      ]
    },
    "AIForged.DAL.NotificationArea": {
      "type": "integer",
      "description": "Area of notification",
      "x-enumNames": [
        "None",
        "Login",
        "Project",
        "Service",
        "Document",
        "Verification",
        "Marketplace",
        "Payment",
        "Preferences",
        "Settings",
        "Support",
        "WorkItem",
        "Billing"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ]
    },
    "AIForged.DAL.NotificationEvent": {
      "type": "integer",
      "description": "Notification event / trigger",
      "x-enumFlags": true,
      "x-enumNames": [
        "Create",
        "Update",
        "Delete",
        "Process",
        "Training",
        "Upload",
        "Request",
        "Invite",
        "Approve",
        "Error",
        "Status",
        "Monitor",
        "Reset",
        "Bug",
        "Info",
        "Progress",
        "Toast",
        "Confirm",
        "Transfer",
        "Escelate",
        "Verify",
        "Linked",
        "Reject",
        "UnDelete"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8092,
        16384,
        65536,
        131072,
        262144,
        524288,
        1048576,
        2097152,
        4194304,
        8388608,
        16777216
      ]
    },
    "AIForged.DAL.NotificationStatus": {
      "type": "integer",
      "description": "Notification status",
      "x-enumNames": [
        "None",
        "Created",
        "Sent",
        "Delivered",
        "Display",
        "Ignore",
        "Deleted",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        90,
        99
      ]
    },
    "AIForged.ViewModels.DocParamSummary": {
      "type": "object",
      "description": "Document summary for statistics with parameters info",
      "required": [
        "serviceType",
        "serviceId",
        "usage",
        "status",
        "count",
        "pdId",
        "valueType"
      ],
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceType": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "usage": {
          "$ref": "#/definitions/AIForged.DAL.UsageType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "name": {
          "type": "string"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "labelledCount": {
          "type": "integer",
          "format": "int32"
        },
        "pdId": {
          "type": "integer",
          "format": "int32"
        },
        "paramDefName": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
        },
        "grouping": {
          "$ref": "#/definitions/AIForged.DAL.GroupingType"
        },
        "valueType": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "value": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AIForged.ViewModels.DocumentExtraction": {
      "type": "object",
      "description": "Transposed extraction of structured document results",
      "required": [
        "id",
        "valueType",
        "paramId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
        },
        "grouping": {
          "$ref": "#/definitions/AIForged.DAL.GroupingType"
        },
        "valueType": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "paramId": {
          "type": "integer",
          "format": "int32"
        },
        "parentParamId": {
          "type": "integer",
          "format": "int32"
        },
        "paramIndex": {
          "type": "integer",
          "format": "int32"
        },
        "paramValue": {
          "type": "string"
        },
        "verificationId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "charge": {
          "type": "number",
          "format": "double"
        },
        "provider": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.PaymentStatus": {
      "type": "integer",
      "description": "Payment status",
      "x-enumNames": [
        "None",
        "Captured",
        "Authorization",
        "Processing",
        "Complete",
        "Credit",
        "Rejected",
        "Declined",
        "Error",
        "Deleted",
        "Unknown"
      ],
      "enum": [
        0,
        10,
        11,
        20,
        30,
        40,
        50,
        60,
        70,
        90,
        99
      ]
    },
    "AIForged.ViewModels.PermissionViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.ChargeStatus": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Active",
        "Deleted"
      ],
      "enum": [
        0,
        99
      ]
    },
    "AIForged.CloneChecks": {
      "type": "object",
      "required": [
        "projectExist",
        "doNotCreatePD",
        "reProcessDocumentDataOnly",
        "reProcessDataSetDocument",
        "reProcessInboxDocument",
        "reProcessOutboxDocument",
        "reProcessDefinitionDocument",
        "reProcessTrainingDocument",
        "reProcessLabellingDocument",
        "parameterExists",
        "verificationExists",
        "transactionExists",
        "auditExists",
        "workItemsExists",
        "logsExists",
        "paymentExists"
      ],
      "properties": {
        "projectExist": {
          "type": "boolean"
        },
        "doNotCreatePD": {
          "type": "boolean"
        },
        "reProcessDocumentDataOnly": {
          "type": "boolean"
        },
        "reProcessDataSetDocument": {
          "type": "boolean"
        },
        "reProcessInboxDocument": {
          "type": "boolean"
        },
        "reProcessOutboxDocument": {
          "type": "boolean"
        },
        "reProcessDefinitionDocument": {
          "type": "boolean"
        },
        "reProcessTrainingDocument": {
          "type": "boolean"
        },
        "reProcessLabellingDocument": {
          "type": "boolean"
        },
        "parameterExists": {
          "type": "boolean"
        },
        "verificationExists": {
          "type": "boolean"
        },
        "transactionExists": {
          "type": "boolean"
        },
        "auditExists": {
          "type": "boolean"
        },
        "workItemsExists": {
          "type": "boolean"
        },
        "logsExists": {
          "type": "boolean"
        },
        "paymentExists": {
          "type": "boolean"
        }
      }
    },
    "AIForged.DAL.ServiceOptions": {
      "type": "integer",
      "description": "Service type options",
      "x-enumFlags": true,
      "x-enumNames": [
        "Billing",
        "Definition",
        "Training",
        "Classification",
        "Code",
        "Verification",
        "Scraping",
        "Attachment",
        "Indexing",
        "Inbox",
        "Outbox",
        "Processor",
        "Configure",
        "Classes",
        "Keys",
        "Speech",
        "Video",
        "Analysis",
        "Labelling",
        "Vendors",
        "BusinessUnits",
        "PurchaseOrders",
        "GLCodes",
        "HintMatrix",
        "QuestionMatrix"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384,
        32768,
        65536,
        131072,
        262144,
        524288,
        1048576,
        2097152,
        4194304,
        8388608,
        16777216
      ]
    },
    "AIForged.ViewModels.DataTypeViewModel": {
      "type": "object",
      "description": "Data types used for rules and internal processing",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "name": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 256
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.DataTypeCategory"
        },
        "valueTypeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string",
          "maxLength": 450
        },
        "data": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.DataTypeCategory": {
      "type": "integer",
      "description": "The category of data types",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Setting",
        "Service",
        "Statistics",
        "Result",
        "Dependency",
        "Verification",
        "PreProcessor",
        "Processor",
        "PostProcessor"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512
      ]
    },
    "AIForged.ViewModels.EnumDataViewModel": {
      "type": "object",
      "description": "List of system Enums and basic UI info",
      "required": [
        "id",
        "type",
        "typeName",
        "name",
        "value"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.EnumType"
        },
        "typeName": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "name": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string",
          "maxLength": 450
        },
        "info": {
          "type": "string",
          "maxLength": 450
        },
        "icon": {
          "type": "string",
          "maxLength": 450
        },
        "color": {
          "type": "string",
          "maxLength": 256
        }
      }
    },
    "AIForged.DAL.EnumType": {
      "type": "integer",
      "description": "Enum of all enums in the system",
      "x-enumNames": [
        "EnumType",
        "DataTypeCategory",
        "CategoryStatus",
        "ProjectStatus",
        "ServiceOptions",
        "ServiceStatus",
        "ProjectUserStatus",
        "LinkType",
        "ConstraintType",
        "ConstraintStatus",
        "ConstraintIntervalType",
        "DocumentStatus",
        "UsageType",
        "ParameterDefinitionCategory",
        "ParameterDefinitionStatus",
        "DocumentDataType",
        "ChargeStatus",
        "ServiceEventType",
        "ServiceEventStatus",
        "BundleType",
        "PaymentStatus",
        "TransactionStatus",
        "VerificationStatus",
        "FieldRequired",
        "VerificationType",
        "Availability",
        "WorkItemType",
        "WorkItemStatus",
        "WorkItemAction",
        "WorkItemMethod",
        "NotificationType",
        "NotificationStatus",
        "NotificationEvent",
        "SettingType",
        "SettingStatus",
        "MarkingType",
        "Orientation",
        "ReferenceType",
        "ValueType",
        "GroupingType",
        "OptionStatusFlags",
        "RatingType",
        "RatingStatus",
        "UserGroupType",
        "UserGroupStatus",
        "LogType",
        "AuditEntity",
        "AuditAccessType",
        "WizardState",
        "WizardType",
        "SortField",
        "SortDirection"
      ],
      "enum": [
        0,
        1,
        5,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        22,
        24,
        26,
        27,
        29,
        30,
        31,
        35,
        41,
        42,
        50,
        51,
        52,
        55,
        60,
        61,
        62,
        63,
        70,
        71,
        72,
        80,
        81,
        85,
        86,
        90,
        91,
        92,
        95,
        96,
        97,
        100,
        101,
        110,
        200,
        201,
        1000,
        1001,
        2000,
        2001
      ]
    },
    "AIForged.ViewModels.SettingViewModel": {
      "type": "object",
      "required": [
        "id",
        "status",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "maxLength": 256
        },
        "key": {
          "type": "string",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "maxLength": 450
        },
        "value": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.SettingStatus"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AIForged.ViewModels.VerificationSummary": {
      "type": "object",
      "description": "System and user verification info for fields on documents",
      "required": [
        "id",
        "parameterId",
        "dt",
        "type",
        "status",
        "charge",
        "paramDefId",
        "projectId",
        "docId",
        "year",
        "month",
        "day",
        "dayOfWeek",
        "count"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameterId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "symbolsConfidence": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "result": {
          "type": "string"
        },
        "box": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "userName": {
          "type": "string"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceDocId": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string"
        },
        "settingId": {
          "type": "integer",
          "format": "int32"
        },
        "workItem": {
          "type": "integer",
          "format": "int32"
        },
        "transactionId": {
          "type": "integer",
          "format": "int32"
        },
        "referenceDocId": {
          "type": "integer",
          "format": "int32"
        },
        "referenceParamId": {
          "type": "integer",
          "format": "int32"
        },
        "referenceDefId": {
          "type": "integer",
          "format": "int32"
        },
        "charge": {
          "type": "number",
          "format": "double"
        },
        "paramDefId": {
          "type": "integer",
          "format": "int32"
        },
        "paramDefName": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "docId": {
          "type": "integer",
          "format": "int32"
        },
        "docFileName": {
          "type": "string"
        },
        "docContentType": {
          "type": "string"
        },
        "docUsage": {
          "$ref": "#/definitions/AIForged.DAL.UsageType"
        },
        "docStatus": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/System.DayOfWeek"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "average": {
          "type": "number",
          "format": "float"
        },
        "min": {
          "type": "number",
          "format": "float"
        },
        "max": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "System.DayOfWeek": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "AIForged.DAL.WizardType": {
      "type": "integer",
      "description": "Type of wizard",
      "x-enumNames": [
        "Service",
        "Dependency",
        "Categories",
        "Class",
        "Definition",
        "Training",
        "Verification",
        "Analysis",
        "Labelling",
        "Vendors",
        "BusinessUnits",
        "PurchaseOrders",
        "PurchaseOrdersItems",
        "GLCodes",
        "DataSet"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ]
    },
    "AIForged.DAL.WizardState": {
      "type": "integer",
      "description": "Status of a wizard",
      "x-enumNames": [
        "Complete",
        "Error",
        "Partial",
        "Warning"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://local.aiforged.com/connect/authorize",
      "tokenUrl": "https://local.aiforged.com/connect/token",
      "scopes": {
        "openid": "Authentication Id",
        "email": "User email",
        "phone": "User phone number",
        "profile": "User profile info",
        "roles": "User roles",
        "aiforgedapi": "Api Scope"
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "openid",
        "email",
        "phone",
        "profile",
        "roles",
        "aiforgedapi"
      ]
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.aiforged.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://portal.aiforged.com/privacypolicy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Content and Files"
    }
  ]
}